{
    "Administration": {
        "Repository": "SQLite", //Memory / SQL / MongoDb
        // "MongoDbOptions": {
        //     "ConnectionString": "mongodb://localhost/vonkadmin",
        //     "EntryCollection": "vonkentries"
        // },
        // "SqlDbOptions": {
        //     "ConnectionString": "connectionstring to your Firely Server Admin SQL Server database (SQL2012 or newer); Set MultipleActiveResultSets=True",
        //     "AutoUpdateDatabase": true,
        //     "MigrationTimeout": 1800, // in seconds
        //     "LogSqlQueryParameterValues": false
        //     //"AutoUpdateConnectionString" : "set this to the same database as 'ConnectionString' but with credentials that can alter the database. If not set, defaults to the value of 'ConnectionString'",
        // },
        // "SQLiteDbOptions": {
        //     "ConnectionString": "Data Source=./data/vonkadmin.db;Cache=Shared", //"connectionstring to your Firely Server Admin SQLite database (version 3 or newer), e.g. Data Source=c:/sqlite/vonkadmin.db;Cache=Shared"
        //     "AutoUpdateDatabase": true,
        //     "MigrationTimeout": 1800, // in seconds
        //     "LogSqlQueryParameterValues": false
        //     //"AutoUpdateConnectionString" : "set this to the same database as 'ConnectionString' but with credentials that can alter the database. If not set, defaults to the value of 'ConnectionString'"
        // },
        "Security": {
            // "AllowedNetworks": [ "127.0.0.1", "::1" ], // i.e.: ["127.0.0.1", "::1" (ipv6 localhost), "10.1.50.0/24", "10.5.3.0/24", "31.161.91.98"]
            "AllowedNetworks": [ "127.0.0.1", "0.0.0.0/0", "::1"]
            // "OperationsToBeSecured": [ "reindex", "reset", "preload", "importResources" ]
        }
    }
    // "License": {
    //     "LicenseFile": "firelyserver-license.json"
    // },
    // "Hosting": {
    //     "HttpPort": 4080,
    //     //"HttpsPort": 4081, // Enable this to use https
    //     //"CertificateFile": "<your-certificate-file>.pfx", //Relevant when HttpsPort is present
    //     //"CertificatePassword" : "<cert-pass>", // Relevant when HttpsPort is present
    //     //"SslProtocols": [ "Tls12", "Tls13" ], // Relevant when HttpsPort is present.
    //     //"PathBase": "<subpath-to-firely-server>",
    //     "ClientCertificateMode": "NoCertificate", // NoCertificate, AllowCertificate, RequireCertificate
    //     "Limits": {
    //         // This element aims at modifying default Kestrel limits. 
    //         // If required, you add any property from KestrelServerLimits in addition to "MaxRequestBufferSize" below.
    //         // See https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.kestrel.core.kestrelserverlimits?view=aspnetcore-6.0
    //         "MaxRequestBufferSize": 2097152 // Kestrel default: 1048576.
    //     }
    // },
    // "SyncIn": {
    //     "Host": "localhost",
    //     "Username": "guest",
    //     "Password": "guest",
    //     "QueueName": "sync-in",
    //     "VirtualHost": "/",
    //     "BrokerType": "RabbitMq" //  RabbitMq, AzureServiceBus
    // },
    // "Validation": {
    //     "Parsing": "Permissive", // Permissive / Strict
    //     "Level": "Core", // Off / Core / Full
    //     "AllowedProfiles": []
    // },
    // "Terminology": {
    //     "MaxExpansionSize": 650,
    //     "LocalTerminologyService": {
    //         "Order": 10,
    //         "PreferredSystems": [ "http://hl7.org/fhir" ],
    //         "SupportedInteractions": [ "ValueSetValidateCode", "Expand", "FindMatches", "Lookup" ], // ValueSetValidateCode, Expand, FindMatches, Lookup
    //         "SupportedInformationModels": [ "Fhir3.0", "Fhir4.0", "Fhir5.0" ]
    //     }
    //     //Example settings for remote services:
    //     //, 
    //     //"RemoteTerminologyServices": [
    //     //  {
    //     //    "Order": 20,
    //     //    "PreferredSystems": [ "http://snomed.info/sct" ],
    //     //    "SupportedInteractions": [ "ValueSetValidateCode", "Expand", "Lookup", "Translate", "Subsumes", "Closure" ], // ValueSetValidateCode, Expand, Lookup, Translate, Subsumes, Closure
    //     //    "SupportedInformationModels": [ "Fhir4.0" ],
    //     //    "Endpoint": "https://r4.ontoserver.csiro.au/fhir/",
    //     //    "MediaType": "application/fhir+xml"
    //     //  },
    //     //  {
    //     //    "Order": 30,
    //     //    "PreferredSystems": [ "http://loinc.org" ],
    //     //    "SupportedInteractions": [ "ValueSetValidateCode", "Expand", "Translate" ],
    //     //    "SupportedInformationModels": [ "Fhir3.0", "Fhir4.0" ],
    //     //    "Endpoint": "https://fhir.loinc.org/",
    //     //    "Username": "",
    //     //    "Password": ""
    //     //  }
    //     //]
    // },
    // "Cache": {
    //     "MaxConformanceResources": 5000
    // },
    // "MongoDbOptions": {
    //     "ConnectionString": "mongodb://localhost/vonkdata",
    //     "EntryCollection": "vonkentries",
    //     "MaxLogLine": 300
    // },
    // "SqlDbOptions": {
    //     "ConnectionString": "connectionstring to your Firely Server SQL Server database (SQL2012 or newer); Set MultipleActiveResultSets=True",
    //     "AutoUpdateDatabase": true,
    //     "MigrationTimeout": 1800, // in seconds
    //     "BulkDataExportTimeout": 300, // in seconds
    //     "LogSqlQueryParameterValues": false
    //     //"AutoUpdateConnectionString" : "set this to the same database as 'ConnectionString' but with credentials that can alter the database. If not set, defaults to the value of 'ConnectionString'"
    // },
    // "SQLiteDbOptions": {
    //     "ConnectionString": "Data Source=./data/vonkdata.db;Cache=Shared", //"connectionstring to your Firely Server SQLite database (version 3 or newer), e.g. Data Source=c:/sqlite/vonkdata.db",
    //     "AutoUpdateDatabase": true,
    //     "MigrationTimeout": 1800, // in seconds
    //     "LogSqlQueryParameterValues": false
    //     //"AutoUpdateConnectionString" : "set this to the same database as 'ConnectionString' but with credentials that can alter the database. If not set, defaults to the value of 'ConnectionString'"
    // },
    // "AllowedOrigins": [
    //     "https://*" // allows all origins, but requires https for CORS requests
    // ],
    // "MemoryOptions": {
    //     "SimulateTransactions": false
    // },
    // "BundleOptions": {
    //     "DefaultCount": 10,
    //     "MaxCount": 50
    //     //,"DefaultSort": "-_lastUpdated"
    // },
    // "SizeLimits": {
    //     "MaxResourceSize": "1MiB", // b/kB/KiB/Mb/MiB, no spaces
    //     "MaxBatchSize": "5MiB",
    //     "MaxBatchEntries": 200
    // },
    // "ReindexOptions": {
    //     "BatchSize": 100,
    //     "MaxDegreeOfParallelism": 10
    // },
    // "FhirCapabilities": {
    //     "ConditionalDeleteOptions": {
    //         "ConditionalDeleteType": "Single", // Single or Multiple,
    //         "ConditionalDeleteMaxItems": 1
    //     },
    //     "SearchOptions": {
    //         "MaximumIncludeIterationDepth": 1,
    //         "PagingCache": {
    //             "MaxSize": 1100,
    //             "ItemSize": 1,
    //             "Duration": 10
    //         }
    //     }
    // },
    // "SupportedInteractions": {
    //     "InstanceLevelInteractions": "read, vread, update, patch, delete, history, conditional_delete, conditional_update, $validate, $validate-code, $expand, $compose, $find-matches, $meta, $meta-add, $meta-delete, $document, $translate, $subsumes, $export, $everything, $erase",
    //     "TypeLevelInteractions": "create, search, history, conditional_create, compartment_type_search, $validate, $snapshot, $validate-code, $expand, $lookup, $compose, $find-matches, $document, $translate, $subsumes, $export, $lastn, $docref, $verify-integrity",
    //     "WholeSystemInteractions": "capabilities, batch, transaction, history, search, compartment_system_search, $validate, $convert, $versions, $export, $exportstatus, $exportfilerequest, $closure, $verify-integrity-status"
    // },
    // "SupportedModel": {
    //     //"RestrictToResources": [ "Patient", "Observation" ],
    //     //"RestrictToSearchParameters": ["Patient.active"],
    //     //"RestrictToCompartments": ["Patient"]
    // },
    // "SubscriptionEvaluatorOptions": {
    //     "Enabled": true,
    //     "RepeatPeriod": 20000,
    //     "SubscriptionBatchSize": 1,
    //     "RetryPeriod": 30000,
    //     "MaximumRetries": 3,
    //     "SendRestHookAsCreate": false //set to true for Vonk < 3.9.3 behaviour; set to false (default) for specification compliance
    // },
    // "AdministrationImportOptions": {
    //     "ImportDirectory": "./vonk-import",
    //     "ImportedDirectory": "./vonk-imported", //Do not place ImportedDirectory *under* ImportDirectory, since an import will recursively read all subdirectories.
    //     //"SimplifierProjects": [
    //     //  {
    //     //    "Uri": "https://stu3.simplifier.net/<your-project>",
    //     //    //"UserName": "Simplifier user name",
    //     //    //"Password": "Password for the above user name",
    //     //    "BatchSize": 20
    //     //  }
    //     //],
    //     "MaxInParallel": 1 //Optimal value for default SQLite database; SQL Server or MongoDB profit from a setting of 10.
    // },
    // "SmartAuthorizationOptions": {
    //     "Enabled": false,
    //     "Filters": [
    //         {
    //             "FilterType": "Patient", //Filter on a Patient compartment if a 'patient' launch scope is in the auth token
    //             "FilterArgument": "identifier=#patient#" //... for the Patient that has an identifier matching the value of that 'patient' launch scope
    //         }
    //         //{
    //         //  "FilterType": "Encounter", //Filter on an Encounter compartment if an 'encounter' launch scope is in the auth token
    //         //  "FilterArgument": "identifier=#encounter#" //... for the Encounter that has an identifier matching the value of that 'encounter' launch scope
    //         //},
    //         //{
    //         //  "FilterType": "RelatedPerson", //Filter on a RelatedPerson compartment if a 'relatedperson' launch scope is in the auth token
    //         //  "FilterArgument": "identifier=#relatedperson#" //... for the RelatedPerson that has an identifier matching the value of that 'relatedperson' launch scope
    //         //},
    //         //{
    //         //  "FilterType": "Practitioner", //Filter on a Practitioner compartment if a 'practitioner' launch scope is in the auth token
    //         //  "FilterArgument": "identifier=#practitioner#" //... for the Practitioner that has an identifier matching the value of that 'practitioner' launch scope
    //         //},
    //         //{
    //         //  "FilterType": "Device", //Filter on a Device compartment if a 'device' launch scope is in the auth token
    //         //  "FilterArgument": "identifier=#device#" //... for the Device that has an identifier matching the value of that 'device' launch scope
    //         //}
    //     ],
    //     "Authority": "https://example.org/base-url-to-your-identity-provider",
    //     //"AdditionalBaseEndpointsInDiscoveryDocument": ["additional-url-to-your-identity-provider"],
    //     //"AdditionalIssuersInToken": ["additional-url-to-your-identity-provider"],
    //     //"ClaimsNamespace": "http://smarthealthit.org",
    //     //"Audience": "https://example.org/base-url-of-firely-server", //Has to match the value the Authority provides in the audience claim.
    //     "RequireHttpsToProvider": false, //You want this set to true (the default) in a production environment!
    //     "Protected": {
    //         "InstanceLevelInteractions": "read, vread, update, patch, delete, history, conditional_delete, conditional_update, $validate, $meta, $meta-add, $meta-delete, $export, $everything, $erase",
    //         "TypeLevelInteractions": "create, search, history, conditional_create, compartment_type_search, $export, $lastn, $docref",
    //         "WholeSystemInteractions": "batch, transaction, history, search, compartment_system_search, $export, $exportstatus, $exportfilerequest"
    //     },
    //     "TokenIntrospection": {
    //         "ClientId": "Firely Server",
    //         "ClientSecret": "secret"
    //     },
    //     "ShowAuthorizationPII": false,
    //     //"AccessTokenScopeReplace": "-",
    //     "SmartCapabilities": [
    //         "LaunchStandalone",
    //         "LaunchEhr",
    //         //"AuthorizePost",
    //         "ClientPublic",
    //         "ClientConfidentialSymmetric",
    //         //"ClientConfidentialAsymmetric",
    //         "SsoOpenidConnect",
    //         "ContextStandalonePatient",
    //         "ContextStandaloneEncounter",
    //         "ContextEhrPatient",
    //         "ContextEhrEncounter",
    //         "PermissionPatient",
    //         "PermissionUser",
    //         "PermissionOffline",
    //         "PermissionOnline",
    //         "PermissionV1",
    //         //"PermissionV2",
    //         "ContextStyle",
    //         "ContextBanner"
    //     ]
    // },
    // "InformationModel": {
    //     "Default": "Fhir4.0", // information model to use when none is specified in either mapping, the _format parameter or the ACCEPT header
    //     "IncludeFhirVersion": [ "Fhir4.0", "Fhir5.0" ],
    //     "Mapping": {
    //         "Mode": "Off"
    //         //"Mode": "Path", // yourserver.org/r3 => FHIR STU3; yourserver.org/r4 => FHIR R4
    //         //"Map": {
    //         //  "/R3": "Fhir3.0",
    //         //  "/R4": "Fhir4.0",
    //         //  "/R5": "Fhir5.0"
    //         //}
    //         //"Mode": "Subdomain", // r3.yourserver.org => FHIR STU3; r4.yourserver.org => FHIR R4
    //         //"Map": 
    //         //  {
    //         //    "r3": "Fhir3.0",
    //         //    "r4": "Fhir4.0",
    //         //    "r5": "Fhir5.0"
    //         //  }
    //     }
    // },
    // "HttpOptions": {
    //     "DefaultResponseType": "application/fhir+json"
    // },
    // "TaskFileManagement": {
    //     "StorageService": {
    //         "StorageType": "LocalFile",
    //         //LocalFile / AzureBlob / AzureFile
    //         "StoragePath": "./taskfiles"
    //         //Cloud storage only. Represents container or share name. Lowercase letters, numbers, and dashes only
    //         //"ContainerName": "firelyserver"
    //     }
    // },
    // //"AzureServices": {
    // //  "Storage": {
    // //    "AccountName": "",
    // //    "AccountKey": ""
    // //  }
    // //},
    // "PatientEverythingOperation": {
    //     "AdditionalResources": [ "Organization", "Location", "Substance", "Device", "Medication" ] // included referenced resources, additional to the Patient compartment resources
    // },
    // "BulkDataExport": {
    //     "RepeatPeriod": 60000, //ms
    //     "AdditionalResources": [ "Organization", "Location", "Substance", "Device", "Medication", "Practitioner" ] // included referenced resources, additional to the Patient compartment resources
    // },
    // "Vonk.Plugin.BinaryWrapper": {
    //     "RestrictToMimeTypes": [ "application/pdf", "text/plain", "text/csv", "image/png", "image/jpeg" ]
    // },
    // "Audit": {
    //     "AuditEventSignatureEnabled": false,
    //     "AuditEventSignatureSecret": {
    //         "SecretType": "JWKS",
    //         "Secret": ""
    //     },
    //     "AsyncProcessingRepeatPeriod": 10000,
    //     "AuditEventVerificationBatchSize": 20,
    //     "ExcludedRequests": [],
    //     "InvalidAuditEventProcessingThreshold": 100
    // },
    // "PipelineOptions": {
    //     "PluginDirectory": "./plugins",
    //     "Branches": [
    //         {
    //             "Path": "/",
    //             "Include": [
    //                 "Vonk.Core",
    //                 "Vonk.Plugin.Operations",
    //                 "Vonk.Fhir.R3",
    //                 "Vonk.Fhir.R4",
    //                 //"Vonk.Fhir.R5",
    //                 "Vonk.Repository.Sql.Raw.KSearchConfiguration",
    //                 //"Vonk.Repository.Sql.SqlVonkConfiguration",
    //                 "Vonk.Repository.Sqlite.SqliteVonkConfiguration",
    //                 "Vonk.Repository.MongoDb.MongoDbVonkConfiguration",
    //                 "Vonk.Repository.Memory.MemoryVonkConfiguration",
    //                 "Vonk.Subscriptions",
    //                 "Vonk.Smart",
    //                 "Vonk.UI.Demo",
    //                 "Vonk.Plugin.DocumentOperation.DocumentOperationConfiguration",
    //                 //"Vonk.Plugin.DocumentHandling.DocumentHandlingConfiguration",
    //                 //"Vonk.Plugin.DocRefOperation.DocRefOperationConfiguration",
    //                 "Vonk.Plugin.ConvertOperation.ConvertOperationConfiguration",
    //                 "Vonk.Plugin.BinaryWrapper",
    //                 "Vonk.Plugin.Audit",
    //                 //"Vonk.Plugin.SoFv2",
    //                 //"Vonk.Plugin.BulkDataExport.SystemBulkDataExportConfiguration",
    //                 //"Vonk.Plugin.BulkDataExport.GroupBulkDataExportConfiguration",
    //                 //"Vonk.Plugin.BulkDataExport.PatientBulkDataExportConfiguration",
    //                 //"Vonk.Plugin.PatientEverything",
    //                 //"Vonk.Plugin.LastN",
    //                 //"Vonk.Plugin.EraseOperation.EraseOperationConfiguration",
    //                 "Vonk.Plugin.SearchAnonymization",
    //                 //"Vonk.Plugin.Services.Azure",
    //                 "Vonk.Plugins.Terminology"
    //             ],
    //             "Exclude": [
    //                 "Vonk.Subscriptions.Administration",
    //                 "Vonk.Plugin.Audit.Integrity"
    //             ]
    //         },
    //         {
    //             "Path": "/administration",
    //             "Include": [
    //                 "Vonk.Core",
    //                 "Vonk.Fhir.R3",
    //                 "Vonk.Fhir.R4",
    //                 //"Vonk.Fhir.R5",
    //                 //"Vonk.Repository.Sql.SqlTaskConfiguration",
    //                 //"Vonk.Repository.Sql.SqlAdministrationConfiguration",
    //                 "Vonk.Repository.Sql.Raw.KAdminSearchConfiguration",
    //                 //"Vonk.Repository.Sqlite.SqliteTaskConfiguration",
    //                 "Vonk.Repository.Sqlite.SqliteAdministrationConfiguration",
    //                 //"Vonk.Repository.MongoDb.MongoDbTaskConfiguration",
    //                 "Vonk.Repository.MongoDb.MongoDbAdminConfiguration",
    //                 "Vonk.Repository.Memory.MemoryAdministrationConfiguration",
    //                 "Vonk.Subscriptions.Administration",
    //                 "Vonk.Plugins.Terminology",
    //                 "Vonk.Administration",
    //                 "Vonk.Plugin.BinaryWrapper"
    //             ]
    //         }
    //     ]
    // }
}