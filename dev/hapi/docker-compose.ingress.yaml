---
version: "3.4"
services:
  hapi:
    labels:
      - traefik.enable=true
      - traefik.http.routers.hapi-${COMPOSE_PROJECT_NAME}.rule=Host(`hapi.${BASE_DOMAIN}`)
      - traefik.http.routers.hapi-${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.hapi-${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.hapi-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt

      # Hapi does not EXPOSE the ports it listens on, requiring explicit traefik configuration
      - traefik.http.services.hapi-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8080


      # authenticated access
      - traefik.http.routers.hapi-secure-${COMPOSE_PROJECT_NAME}.rule=Host(`hapi-secure.${BASE_DOMAIN}`)
      - traefik.http.routers.hapi-secure-${COMPOSE_PROJECT_NAME}.middlewares=test-auth-${COMPOSE_PROJECT_NAME}
      - traefik.http.routers.hapi-secure-${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.hapi-secure-${COMPOSE_PROJECT_NAME}.tls=true
      - traefik.http.routers.hapi-secure-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt
      # test/test
      - "traefik.http.middlewares.test-auth-${COMPOSE_PROJECT_NAME}.basicauth.users=test:$$apr1$$2zfDmoJL$$Dk9qeqG6vETCRP5d3sa4S1"

    networks:
      - ingress

networks:
  # ingress network
  ingress:
    external: true
    name: external_web
